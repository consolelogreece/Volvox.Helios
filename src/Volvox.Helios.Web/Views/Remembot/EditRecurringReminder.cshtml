@model Volvox.Helios.Web.ViewModels.Settings.EditRecurringReminderMessageViewModel

@{
    if (Model.Id == default(long))
    {
        ViewData["Title"] = "Add Reminder";
    }
    else
    {
        ViewData["Title"] = "Edit Reminder";
    }
}

<link type="text/css" href="~/lib/gentleSelect/jquery-gentleSelect.css" rel="stylesheet" />
<link type="text/css" href="~/lib/cron/jquery-cron.css" rel="stylesheet" />

<h2>@ViewData["Title"]</h2>

@if (Model.FaultType != 0)
{
    <h4 class="text-danger">@Model.FaultMessage</h4>
}

<hr />
<form asp-action="EditRecurringReminder" class="col-12">
    <div class="row rounded module-input-wrapper">
        <div class="col-md-9 pt-3 pb-3">
            <h4>Reminder enabled</h4>
            <p class="mb-0 text-volvox">
                Decide wheter the reminder is enabled or not
            </p>
        </div>
        <div class="col-md-3 valign">
            <div class="btn-group material-btn-group ml-md-auto mt-md-0 mt-3 mr-3">
                <label for="enabledBtn" class="btn pr-4 pl-4 module-enabler @(Model.Enabled ? "active" : "disabled")">
                    On
                    <input id="enabledBtn" type="radio" name="Enabled" class="d-none" value="true" @(Model.Enabled ? "checked" : "")>
                </label>
                <label for="disabledBtn" class="btn pr-4 pl-4 module-enabler @(Model.Enabled ? "disabled" : "active")">
                    Off
                    <input id="disabledBtn" type="radio" name="Enabled" class="d-none" value="false" @(Model.Enabled ? "" : "checked")>
                </label>
            </div>
        </div>
    </div>
    <div class="row module-input-wrapper rounded mt-4">
        <div class="col-12 pt-3 pb-3">
            <label asp-for="ChannelId"></label>
            <input type="hidden" name="ChannelId" />
            <div id="selectBox"></div>
            <span asp-validation-for="ChannelId" class="text-danger"></span>
            <label asp-for="Message" class="control-label mt-3"></label>
            <div id="textBox"></div>
            <span asp-validation-for="Message" class="text-danger"></span>
            <textarea type="text" name="Message" class="d-none"></textarea>
            <div id="easy_cron" class="mt-3"></div>

            <div id="manual_cron" style="display:none">
                <h3>Recurrence</h3>
                <p>This bot uses Cron Expressions to specify recurrences. Check out <a href="https://en.wikipedia.org/wiki/Cron#CRON_expression">this wiki page</a> for more information. All time is based on UTC timezone.</p>
                <hr />

                <div class="form-row">
                    <div class="col">
                        <div class="form-group">
                            <label asp-for="CronExpression" class="control-label"></label>
                            <input asp-for="CronExpression" class="form-control" />
                            <span asp-validation-for="CronExpression" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        
    <div class="row mt-4">
        <div>
            <a asp-action="RemembotSettings" asp-controller="Settings" class="btn btn-volvox-outline save-btn">Back to List</a>
        </div>
        <div class="ml-auto">
            @if (Model.Id != default(long))
            {
                <button type="button" id="deleteBtn" class="btn btn-danger save-btn mr-2">Delete Reminder</button>
            }
            <button type="submit" class="btn btn-volvox-outline save-btn">Save Reminder</button>
        </div>
    </div>
    <div class="form-group" style="display:none">
        <label asp-for="Id" class="control-label"></label>
        <input asp-for="Id" class="form-control" />
    </div>
</form>

<div>
    <form asp-action="DeleteRecurringReminder" id="deleteForm">
        <div class="form-group" style="display:none">
            <label asp-for="Id" class="control-label"></label>
            <input asp-for="Id" class="form-control" />
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <environment include="Development">
        <script src="~/lib/gentleSelect/jquery-gentleSelect.js"></script>
        <script src="~/lib/cron/jquery-cron.js"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/lib/gentleSelect/jquery-gentleSelect-min.js"
                asp-fallback-src="~/lib/gentleSelect/jquery-gentleSelect.js"></script>
        <script src="~/lib/cron/jquery-cron-min.js"
                asp-fallback-src="~/lib/cron/jquery-cron.js"></script>
    </environment>

    <script type="text/javascript">
        var selectChannelVal = '@Model.ChannelId';
        if (selectChannelVal == '0')
            selectChannelVal = '@Model.Channels.FirstOrDefault().Value';
        $("#selectBox").dxSelectBox({
            dataSource: @(Html.Raw(Json.Serialize(Model.Channels))),
            valueExpr: "value",
            displayExpr: "text",
            searchEnabled: true,
            value: selectChannelVal,
            onInitialized: (e) => {
                $('input[name="ChannelId"]').val(selectChannelVal);
            },
            onValueChanged: (e) => {
                $('input[name="ChannelId"]').val(e.value);
            }
        });

        String.prototype.replaceAll = function (search, replacement) {
            var target = this;
            return target.replace(new RegExp(search, 'g'), replacement);
        };

        $("#textBox").dxTextArea({
            height: 250,
            value: '@Model.Message'.replaceAll('&#xA;', '\n'),
            onInitialized: (e) => {
                $('textarea[name="Message"]').html('@Model.Message'.replaceAll('\n', '<br>'));
            },
            onValueChanged: (e) => {
                $('textarea[name="Message"]').html(e.value.replaceAll('\n', '<br>'));
            }
        });

        $('.module-enabler input:not(".active")').click((e) => {
            $(e.currentTarget).parent().parent().find('.active').toggleClass('active disabled');
            $(e.currentTarget).parent().toggleClass('active disabled');
        });

        $(document).ready(function () {
            var faultType = @Model.FaultType;
            var cronExpression = $("#CronExpression").val();

            if (cronExpression === "" || faultType == true) {
                cronExpression = "0 * * * *";
            }

            $("#easy_cron").cron({
                initial: cronExpression,
                useGentleSelect: true,
                onChange: function () {
                    var cronField = $("#CronExpression");
                    var newExpression = $(this).cron("value");
                    cronField.val(newExpression);
                }
            });

            $("#deleteBtn").click(function (e) {
                if (confirm("Are you sure you want to delete this reminder? This cannot be undone.")) {
                    $("#deleteForm").submit();
                }
            });

        });
    </script>
}